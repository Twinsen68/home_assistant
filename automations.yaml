- alias: Backup HA Configuration Files
  id: backup_config_files
  trigger:
    platform: time_pattern
    hours: 1
    minutes: 1
    seconds: 0 
  condition:
    condition: time
    weekday:
      - wed
  action:
    - service: shell_command.backup_configuration

- alias: Activate Motion Detect on Leaving Home Zone
  id: gabe_out_of_home_zone_motion_on
  trigger:
    platform: state
    entity_id: device_tracker.huawei_mate_992528f2b1a5
#    zone: zone.home
    from: 'home'
    to: 'not_home'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: switch.motion_detect

- alias: Turn Off Lights on Leaving Home Zone
  id: gabe_out_of_home_zone_lights_off
  trigger:
    platform: state
    entity_id: device_tracker.huawei_mate_992528f2b1a5
#    zone: zone.home
#    event: leave
    from: 'home'
    to: 'not_home'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: group.all_lights
    - service: switch.turn_off
      entity_id: switch.entry_light

- alias: Turn On Lights on Enter Home Zone
  id: gabe_arrive_in_home_zone_lights_on
  trigger:
    - platform: zone
      entity_id: device_tracker.gabes_mate
      zone: zone.home
      event: enter
    - platform: zone
      entity_id: device_tracker.huawei_mate_992528f2b1a5
      zone: zone.home
      event: enter
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: group.all_lights
    - service: switch.turn_on
      entity_id: switch.entry_light

- alias: Deactivate Motion Detect on Enter Home Zone
  id: gabe_arrive_in_home_zone_motion_off
  trigger:
    - platform: zone
      entity_id: device_tracker.gabes_mate
      zone: zone.home
      event: enter
    - platform: zone
      entity_id: device_tracker.huawei_mate_992528f2b1a5
      zone: zone.home
      event: enter
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: switch.motion_detect

- alias: Welcome on Enter Home Zone
  id: gabe_arrive_in_home_zone_welcome
  trigger:
    - platform: zone
      entity_id: device_tracker.huawei_mate_992528f2b1a5
      zone: zone.home
      event: enter
  action:
#    - delay: '00:00:05'
    - service: notify.gabes_alexa
      data:
        message: "Hello_Gayb,_Welcome_home!"

#- alias: Home Assistant Start
#  trigger:
#    platform: homeassistant
#    event: start 
#  action:
#    - delay: '00:00:10'
#    - service: tts.google_say
#      data:
#        entity_id: media_player.tts_bluetooth_speaker
#        message: 'Home Assistant has started'

- alias: Set Harmony activity
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_select.harmony
  action:
    service: remote.turn_on
    entity_id: remote.gabes_harmony_hub
    data_template:
      activity: >
        {% if is_state("input_select.harmony", "Speaker") %}
          29883813
        {% elif is_state("input_select.harmony", "Fishtank Evening") %}
          25723108
        {% elif is_state("input_select.harmony", "Lights Up") %}
          22279074
        {% elif is_state("input_select.harmony", "Watch Roku") %}
          26106880
        {% elif is_state("input_select.harmony", "Watch a Movie") %}
          26106724
        {% elif is_state("input_select.harmony", "Morning News") %}
          22279583
        {% elif is_state("input_select.harmony", "TV Lights") %}
          22279102
        {% elif is_state("input_select.harmony", "Fishtank Morning") %}
          25723061
        {% else %}
          -1
        {% endif %}
        
# This next automation is to update the input_select when the Harmony's
# activity was changed from somewhere else, e.g. using its physical remote.
- alias: Update Harmony input_select
  hide_entity: True
  trigger:
    platform: state
    entity_id: remote.gabes_harmony_hub
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.harmony
      option: "{{ states.remote.harmony_hub.attributes.current_activity }}"

## World Tides Wavemaker
- alias: Turn on Wavemaker at high tide
  trigger:
    platform: template
    value_template: '{{ strptime(states.sensor.time_utc.state , "%H:%M") == strptime(states.sensor.reef_time_high_tide.state , "%H:%M") }}'
  action:
    service: switch.turn_on
    entity_id: switch.06200940dc4f22cbb94b_2

- alias: Turn off Wavemaker at low tide
  trigger:
    platform: template
    value_template: '{{ strptime(states.sensor.time_utc.state , "%H:%M") == strptime(states.sensor.reef_time_low_tide.state , "%H:%M") }}'
  action:
    service: script.turn_on
    entity_id: script.reef_waves_lowtide_fade_script

## Amazon Tides Wavemaker
- alias: Turn on Amazon Waves at high tide
  trigger:
    platform: template
    value_template: '{{ strptime(states.sensor.time.state , "%k:%M") == strptime(states.sensor.amazonnexthightide.state , "%k:%M") }}'
  action:
    service: script.turn_on
    entity_id: script.freshwater_waves_on_script

- alias: Turn on Amazon Waves again at low tide
  trigger:
    platform: template
    value_template: '{{ strptime(states.sensor.time.state , "%k:%M") == strptime(states.sensor.amazonnextlowtide.state , "%k:%M") }}'
  action:
    service: script.turn_on
    entity_id: script.freshwater_waves_on_script

#Sunrise Sunset on Tanks
- alias: Start Fade Down of Reef Lights at Sunset
  trigger:
    platform: template
    value_template: "{{ strptime(states.sensor.time.state , '%k:%M') == strptime(states.sensor.reefsunsettides.state , '%k:%M') }}"
  action:
  - service: script.turn_on
    entity_id: script.reeftank_evening_fade_kessil

- alias: Start Fade Up of Reef Lights at Sunrise
  trigger:
    platform: template
    value_template: "{{ strptime(states.sensor.time.state , '%H:%M') == strptime(states.sensor.reefsunrisetides.state , '%H:%M') }}"
  action:
  - service: script.turn_on
    entity_id: script.reeftank_morning_fade_kessil

- alias: Freshwater Lights and O2 On at Sunrise
  trigger:
    platform: template
    value_template: "{{ strptime(states.sensor.time.state , '%H:%M') == strptime(states.sensor.amazonsunrisetides.state , '%H:%M') }}"
  action:
  - service: script.turn_on
    entity_id: script.octotank_morning_on

- alias: Freshwater Lights and O2 Off at Sunset
  trigger:
    platform: template
    value_template: "{{ strptime(states.sensor.time.state , '%H:%M') == strptime(states.sensor.amazonsunsettides.state , '%H:%M') }}"
  action:
  - service: script.turn_on
    entity_id: script.octotank_evening_off

# Amazon Feeder
- alias: Activate Feeder Script Morning
  trigger:
    platform: time
    at: '09:15:00'
  action:
  - service: script.turn_on
    entity_id: script.freshwater_feeder_script

- alias: Activate Feeder Script MidDay
  trigger:
    platform: time
    at: '12:15:00'
  action:
  - service: script.turn_on
    entity_id: script.freshwater_feeder_script

- alias: Activate Feeder Script Afternoon
  trigger:
    platform: time
    at: '17:30:00'
  action:
  - service: script.turn_on
    entity_id: script.freshwater_feeder_script

## Amazon Temp Regulation
# This automation script runs when a value is received via Amazon sensor: monthly_amazon_temp
- alias: Set Amazon Thermostat Max Daytime Selector
  trigger:
    platform: template
    value_template: "{{ states.sensor.monthly_amazon_temp_lowmed.state != states.climate.octo_tank_therm.attributes.temperature.state }}"
  condition:
    condition: state
    entity_id: switch.06200940dc4f22cbb432_4
    state: 'on'
  action:
     service: climate.set_temperature
     data_template:
       entity_id: climate.octo_tank_therm
       temperature: '{{ states.sensor.monthly_amazon_temp_lowmed.state | float }}'

 # This automation script runs when a value is received via Amazon sensor: monthly_amazon_temp
- alias: Set Amazon Thermostat Max Night Selector
  trigger:
    platform: template
    value_template: "{{ states.sensor.monthly_amazon_temp_min.state != states.climate.octo_tank_therm.attributes.temperature.state }}"
  condition:
    condition: state
    entity_id: switch.06200940dc4f22cbb432_4
    state: 'off'
  action:
     service: climate.set_temperature
     data_template:
       entity_id: climate.octo_tank_therm
       temperature: '{{ states.sensor.monthly_amazon_temp_min.state | float }}'

 # This automation script runs when a value is received via Reef sensor: reef_low_avg_daily_temp
- alias: Set Reef Thermostat Max Daytime Selector
  trigger:
    platform: template
    value_template: "{{ states.sensor.reef_high_avg_daily_temp.state != states.climate.reef_tank_therm.attributes.temperature.state }}"
  condition:
    condition: state
    entity_id: input_boolean.reef_temp_daytime_state
    state: 'on'
  action:
     service: climate.set_temperature
     data_template:
       entity_id: climate.reef_tank_therm
       temperature: '{{ states.sensor.reef_high_avg_daily_temp.state | float }}'
#       temperature: '{{ states.sensor.reef_high_avg_daily_temp.state | float - 2 }}'

 # This automation script runs when a value is received via Reef sensor: noaa_daily_min_reef_temp
- alias: Set Reef Thermostat Max Nighttime Selector
  trigger:
    platform: template
    value_template: "{{ states.sensor.noaa_daily_min_reef_temp.state != states.climate.reef_tank_therm.attributes.temperature.state }}"
  condition:
    condition: state
    entity_id: input_boolean.reef_temp_nightime_state
    state: 'on'
  action:
     service: climate.set_temperature
     data_template:
       entity_id: climate.reef_tank_therm
       temperature: '{{ states.sensor.noaa_daily_min_reef_temp.state | float }}'
#       temperature: '{{ states.sensor.noaa_daily_min_reef_temp.state | float - 2.0 }}'

- alias: Regulate Reef Heater To Off on Low Misread
  trigger:
    platform: template
    value_template: '{{ 32 == states.sensor.onlyreefcontrolpitemp.state }}'
  action:
    service: switch.turn_off
    entity_id: switch.06200940dc4f22cbb94b_3

- alias: Nightly Top Off On
  trigger:
    - platform: time
      at: '22:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.reef_pump_1_scheduled

- alias: Nightly Top Off Off
  trigger:
    - platform: time
      at: '1:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.reef_pump_1_scheduled

#Turn on sump pump every 20 min
#- alias: Reef Sump Pump On Every Hour
#  trigger:
#    - platform: time_pattern
#      minutes: '/20'
#  condition:
#    condition: state
#    entity_id: sensor.reefcontrolpifloat
#    state: 'OK'
#  action:
#    service: switch.turn_on
#    entity_id: switch.2437254184f3eb695276

#Update Reef temps once a day
  alias: 'download_noaa_temps'
  trigger:
    platform: time
    at: '01:15:00'
  action:
    - service: downloader.download_file
      data_template:
        url: "https://coralreefwatch.noaa.gov/vs/data/great_nicobar.txt"
        filename: "east_java_bali.txt"
        overwrite: true

#Turn on sump pump every 3 min
- alias: Reef Sump Pulse
  trigger:
    - platform: time_pattern
      minutes: '/4'
  condition:
    condition: state
    entity_id: sensor.reefcontrolpifloat
    state: 'OK'
  action:
    service: script.turn_on
    entity_id: script.reeftank_sump_pulse

#Turn sump pump off on low
- alias: Reef Sump Pump Low Off
  trigger:
    platform: state
    entity_id: sensor.reefcontrolpifloat
    from: 'OK'
    to: 'Low'
  action:
    service: switch.turn_off
    entity_id: switch.2437254184f3eb695276

#Turn sump pump off on low timer
- alias: Reef Sump Pump Low Off Timer
  trigger:
    platform: state
    entity_id: sensor.reefcontrolpifloat
    to: 'Low'
    for:
      minutes: 5
  action:
    service: switch.turn_off
    entity_id: switch.2437254184f3eb695276

## Herb Garden
- alias: Garden Turn On Lights
  trigger:
    - platform: time
      at: '09:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.garden_light

- alias: Garden Turn Off Lights
  trigger:
    - platform: time
      at: '20:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.garden_light

- alias: Garden Turn Off Waterbot Evening
  trigger:
    - platform: time
      at: '1:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.garden_waterbot

- alias: Garden Turn On Waterbot Morning
  trigger:
    - platform: time
      at: '6:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.garden_waterbot

- alias: Garden Turn Off Waterbot Morning
  trigger:
    - platform: time
      at: '13:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.garden_waterbot

- alias: Garden Turn On Waterbot Evening
  trigger:
    - platform: time
      at: '18:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.garden_waterbot

## Vacuuming
- alias: Vacuum on Schedule
  trigger:
    platform: time
    at: '14:00:00'
  condition:
  - condition: time
    weekday:
      - tue
      - thu
  - condition: state
    entity_id: device_tracker.gabes_mate
    state: work
  action:
    service: script.turn_on
    entity_id: script.roomba_turn_on


#Alert if public IP Changes
- alias: ip_change_alert
  trigger:
    platform: state
    entity_id: sensor.ip_address
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  action:
    - service: ifttt.trigger
      data_template: {"event":"change_of_ip", "value1":"{{ states.sensor.ip_address.state }}"}

#Text Message if there's mail
- alias: usps_mail_alert
  trigger:
    platform: zone
    entity_id: device_tracker.huawei_mate_992528f2b1a5
    zone: zone.home
    event: enter
  condition:
    condition: or
    conditions:
      - condition: numeric_state
        entity_id: sensor.usps_mail
        above: '0' 
      - condition: numeric_state
        entity_id: sensor.usps_packages
        above: '0'
  action:
    - service: script.turn_on
      entity_id: script.usps_sms_notification

#Text Message if there's mail refresher on
- alias: usps_mail_alert_automation_on
  trigger:
    - platform: numeric_state
      entity_id: sensor.usps_mail
      above: '0'
    - platform: numeric_state
      entity_id: sensor.usps_packages
      above: '0'
  action:
    - service: automation.turn_on
      entity_id: automation.usps_mail_alert

#Text Message if there's mail refresher off
- alias: usps_mail_alert_automation_off
  trigger:
    - platform: numeric_state
      entity_id: sensor.usps_mail
      below: '1' 
  action:
    - service: automation.turn_off
      entity_id: automation.usps_mail_alert

#3D Printer Shutdown on Idle
- alias: Turn off 3D Printer on Idle
  trigger:
    platform: state
    entity_id: sensor.octoprint_target_tool1_temp
    to: '32'
  condition:
    condition: state
    entity_id: binary_sensor.octoprint_status_printing
    state: 'off'
  # Trigger only if state was this for last 30 minutes.
    for:
      minutes: 30
  action:
#    - delay:
#        minutes: 15
    - service: switch.turn_off
      entity_id: switch.2437254184f3eb695327

- id: 'rpi_power_issue'
  alias: Power Problem Notification
  trigger:
  - platform: numeric_state
    entity_id: sensor.rpi_power_status
    above: 0
    for:
      minutes: 1
  condition:
  action:
    service: persistent_notification.create
    data:
      message: "Charger reported {{ states.sensor.rpi_power_status.state }}"
      title: "RPI Power Issue"

- alias: Check for Tweets OctoCam
  id: twitter_check_octocam
  trigger:
    - platform: time_pattern
      minutes: '/30'
  action:
    - service: shell_command.tweet_retrieve_octocam

- alias: Check for Tweets SFGabe
  id: twitter_check_sfgabe
  trigger:
    - platform: time_pattern
      minutes: '/60'
  action:
    - service: shell_command.tweet_retrieve_sfgabe

##Alarm Clock
- id: start_alarm_clock_radio_off_day
  alias: Start Alarm Clock Radio Off Day
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.alarm_time_off_day.state }}'
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'off'
    - condition: state
      entity_id: input_boolean.start_alarm_clock_off_day
      state: 'off'
    - condition: state
      entity_id: input_boolean.alarm_clock_work_day
      state: 'off'
    - condition: state
      entity_id: input_boolean.alarm_clock_off_day
      state: 'on'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.alarm_clock
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.start_alarm_clock_off_day


#
- id: start_alarm_clock_radio_work_day
  alias: Start Alarm Clock Radio Work Day
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.alarm_time_work_day.state }}'
  condition:
    - condition: time
      weekday:
        - tue
        - wed
        - thu
        - fri
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'off'
    - condition: state
      entity_id: input_boolean.work_day
      state: 'on'
    - condition: state
      entity_id: input_boolean.start_alarm_clock_work_day
      state: 'off'
    - condition: state
      entity_id: input_boolean.alarm_clock_work_day
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarm_clock_off_day
      state: 'off'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.start_alarm_clock_work_day
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.alarm_clock

#
- id: wake_up_radio
  alias: Wake Up Radio
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.start_alarm_clock_work_day
      to: 'on'
    - platform: state
      entity_id: input_boolean.start_alarm_clock_off_day
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'on'
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_clock_work_day
          state: 'on'
        - condition: state
          entity_id: input_boolean.alarm_clock_off_day
          state: 'on'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.start_alarm_clock_work_day
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.start_alarm_clock_off_day
    - service: script.turn_on
      data:
        entity_id: script.alarm_clock_loop
            
#
- id: wake_up_radio_from_loop
  alias: Wake Up Radio From Loop
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_clock_loop
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'on'
  action:
    - delay: '00:00:03'
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.alarm_clock_loop
    - service: script.turn_on
      data:
        entity_id: script.alarm_clock_loop

## Alarm 2 test
- id: wake_up_alarm_2
  alias: Alarm clock
  initial_state: on
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (((state_attr('input_datetime.bedroom_alarm_clock_time' , 'timestamp')) - (15 * 60))|timestamp_custom('%H:%M', false)) }}"
  condition:
    - condition: state
      entity_id: device_tracker.huawei_mate_992528f2b1a5
      state: 'home'
    - condition: state
      entity_id: input_boolean.bedroom_alarm_clock_status
      state: 'on'
  action:
    - service: script.turn_on
      data:
        entity_id: script.bedroom_wake_up

## IFTTT Test
- id: IFTTT_test
  alias: IFTTT Test
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'

- alias: Download Reef Stats File
  id: auto_download_reef_stats
  trigger:
    platform: time
    at: '20:15:00'
  action:
    - service: shell_command.download_reef_stats

- alias: Download Amazon Stats File
  id: auto_download_amazon_stats
  trigger:
    platform: time
    at: '20:16:00'
  action:
    - service: shell_command.download_amazon_stats


